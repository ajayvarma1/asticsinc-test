{"ast":null,"code":"import _classCallCheck from \"/var/www/html/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/demo/src/containers/dashboard.js\";\nimport React, { Component } from 'react';\nimport LayoutContentWrapper from '../components/utility/layoutWrapper'; // import LayoutContent from '../components/utility/layoutContent';\n\nimport DashboardWidget from './Widgets'; // import { getCountsAppointment } from '../actions/actions';\n\nimport { connect } from 'react-redux';\nimport { Form } from 'antd';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.onChange = function (checked) {\n      _this.setState({\n        loading: !checked\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      appointmentcount: []\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatch = this.props.dispatch; // dispatch(getCountsAppointment());\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, preState) {\n      if (prevProps.count_appointment !== this.props.count_appointment) {\n        if (this.props.count_appointment.result.length > 0) {\n          this.setState({\n            appointmentcount: this.props.count_appointment.result,\n            loading: false\n          });\n        } else {\n          this.setState({\n            loading: false\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var count_appointment = this.props.count_appointment;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(LayoutContentWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(DashboardWidget, {\n        count_appointment: count_appointment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard = Form.create()(Dashboard);\n\nfunction mapStateToProps(state) {\n  var Common = state.Common;\n  var count_appointment = Common.count_appointment;\n  return {\n    count_appointment: count_appointment\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/var/www/html/demo/src/containers/dashboard.js"],"names":["React","Component","LayoutContentWrapper","DashboardWidget","connect","Form","Dashboard","props","onChange","checked","setState","loading","state","appointmentcount","dispatch","prevProps","preState","count_appointment","result","length","create","mapStateToProps","Common"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,oBAAP,MAAiC,qCAAjC,C,CACA;;AACA,OAAOC,eAAP,MAA4B,WAA5B,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,MAArB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UA0BnBC,QA1BmB,GA0BR,UAAAC,OAAO,EAAI;AACpB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE,CAACF;AAAZ,OAAd;AACD,KA5BkB;;AAEjB,UAAKG,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE,KADE;AAEXE,MAAAA,gBAAgB,EAAE;AAFP,KAAb;AAFiB;AAMlB;;;;wCAEkB;AAAA,UACTC,QADS,GACI,KAAKP,KADT,CACTO,QADS,EAEjB;AACD;;;uCACkBC,S,EAAUC,Q,EAAS;AACpC,UAAID,SAAS,CAACE,iBAAV,KAAgC,KAAKV,KAAL,CAAWU,iBAA/C,EAAkE;AAChE,YAAG,KAAKV,KAAL,CAAWU,iBAAX,CAA6BC,MAA7B,CAAoCC,MAApC,GAA6C,CAAhD,EAAkD;AAChD,eAAKT,QAAL,CAAc;AACZG,YAAAA,gBAAgB,EAAG,KAAKN,KAAL,CAAWU,iBAAX,CAA6BC,MADpC;AAEZP,YAAAA,OAAO,EAAG;AAFE,WAAd;AAID,SALD,MAKK;AACH,eAAKD,QAAL,CAAc;AACZC,YAAAA,OAAO,EAAC;AADI,WAAd;AAGD;AACF;AACF;;;6BAKQ;AAAA,UACCM,iBADD,GACuB,KAAKV,KAD5B,CACCU,iBADD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,oBAAC,eAAD;AAAiB,QAAA,iBAAiB,EAAIA,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,CADF;AAgBD;;;;EAlDqBhB,S;;AAqDxBK,SAAS,GAAGD,IAAI,CAACe,MAAL,GAAcd,SAAd,CAAZ;;AACA,SAASe,eAAT,CAAyBT,KAAzB,EAAgC;AAAA,MACtBU,MADsB,GACXV,KADW,CACtBU,MADsB;AAAA,MAI5BL,iBAJ4B,GAK1BK,MAL0B,CAI5BL,iBAJ4B;AAM9B,SAAO;AAACA,IAAAA,iBAAiB,EAAjBA;AAAD,GAAP;AACD;;AACD,eAAeb,OAAO,CAACiB,eAAD,CAAP,CAAyBf,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport LayoutContentWrapper from '../components/utility/layoutWrapper';\r\n// import LayoutContent from '../components/utility/layoutContent';\r\nimport DashboardWidget from './Widgets';\r\n// import { getCountsAppointment } from '../actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'antd';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: false,\r\n      appointmentcount :[]\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { dispatch } = this.props;\r\n    // dispatch(getCountsAppointment());\r\n  }\r\n  componentDidUpdate(prevProps,preState){\r\n    if (prevProps.count_appointment !== this.props.count_appointment) {\r\n      if(this.props.count_appointment.result.length > 0){\r\n        this.setState({\r\n          appointmentcount : this.props.count_appointment.result,\r\n          loading : false\r\n        });\r\n      }else{\r\n        this.setState({\r\n          loading:false\r\n        })  \r\n      }\r\n    }\r\n  }\r\n  onChange = checked => {\r\n    this.setState({ loading: !checked });\r\n  };\r\n\r\n  render() {\r\n    const { count_appointment } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <LayoutContentWrapper>\r\n          {/* <LayoutContent>\r\n      <div style={{fontWeight : 400 , fontSize : '20px',justifyItems : 'center',textAlign : 'center'}}>\r\n        <div style={{marginTop : '10px'}}>\r\n          <span style={{marginTop:'20px'}}><b>Welcome to Clinic!</b></span><br/>\r\n          <span>Majestic has developed this client portal so that you can have access to your information at any time.This is especially handy when you are dealing with the Australian Aged Care Quality Agency or are looking for evidence for other events that may occur i.e. an outbreak</span>\r\n        </div>\r\n      </div>\r\n    \r\n        </LayoutContent> */}\r\n          <DashboardWidget count_appointment = {count_appointment} />\r\n        </LayoutContentWrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard = Form.create()(Dashboard);\r\nfunction mapStateToProps(state) {\r\n  const { Common } = state;\r\n\r\n  const {\r\n    count_appointment\r\n  } = Common;\r\n  return {count_appointment};\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}