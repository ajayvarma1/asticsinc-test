{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loginRequest),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loginSuccess),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loginError),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logout),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(checkAuthorization),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, takeEvery, put, fork } from 'redux-saga/effects';\nimport { push } from 'react-router-redux';\nimport { getToken, clearToken } from '../../helpers/utility';\nimport actions from './actions';\nvar fakeApiCall = true; // auth0 or express JWT\n\nexport function loginRequest() {\n  return _regeneratorRuntime.wrap(function loginRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery('LOGIN_REQUEST',\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!fakeApiCall) {\n                      _context.next = 5;\n                      break;\n                    }\n\n                    _context.next = 3;\n                    return put({\n                      type: actions.LOGIN_SUCCESS,\n                      token: 'secret token',\n                      profile: 'Profile'\n                    });\n\n                  case 3:\n                    _context.next = 7;\n                    break;\n\n                  case 5:\n                    _context.next = 7;\n                    return put({\n                      type: actions.LOGIN_ERROR\n                    });\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\nexport function loginSuccess() {\n  return _regeneratorRuntime.wrap(function loginSuccess$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(actions.LOGIN_SUCCESS,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(payload) {\n            return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return localStorage.setItem('id_token', payload.token);\n\n                  case 2:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function loginError() {\n  return _regeneratorRuntime.wrap(function loginError$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(actions.LOGIN_ERROR,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee3() {\n            return _regeneratorRuntime.wrap(function _callee3$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(actions.LOGOUT,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee4() {\n            return _regeneratorRuntime.wrap(function _callee4$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    clearToken();\n                    _context7.next = 3;\n                    return put(push('/'));\n\n                  case 3:\n                    window.location.reload();\n\n                  case 4:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee4);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function checkAuthorization() {\n  return _regeneratorRuntime.wrap(function checkAuthorization$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(actions.CHECK_AUTHORIZATION,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee5() {\n            var token;\n            return _regeneratorRuntime.wrap(function _callee5$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    token = getToken().get('idToken');\n\n                    if (!token) {\n                      _context9.next = 4;\n                      break;\n                    }\n\n                    _context9.next = 4;\n                    return put({\n                      type: actions.LOGIN_SUCCESS,\n                      token: token,\n                      profile: 'Profile'\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee5);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked5);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(checkAuthorization), fork(loginRequest), fork(loginSuccess), fork(loginError), fork(logout)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["/var/www/html/demo/src/redux/auth/saga.js"],"names":["loginRequest","loginSuccess","loginError","logout","checkAuthorization","rootSaga","all","takeEvery","put","fork","push","getToken","clearToken","actions","fakeApiCall","type","LOGIN_SUCCESS","token","profile","LOGIN_ERROR","payload","localStorage","setItem","LOGOUT","window","location","reload","CHECK_AUTHORIZATION","get"],"mappings":"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","sourcesContent":["import { all, takeEvery, put, fork } from 'redux-saga/effects';\r\nimport { push } from 'react-router-redux';\r\nimport { getToken, clearToken } from '../../helpers/utility';\r\nimport actions from './actions';\r\n\r\nconst fakeApiCall = true; // auth0 or express JWT\r\n\r\nexport function* loginRequest() {\r\n  yield takeEvery('LOGIN_REQUEST', function*() {\r\n    if (fakeApiCall) {\r\n      yield put({\r\n        type: actions.LOGIN_SUCCESS,\r\n        token: 'secret token',\r\n        profile: 'Profile'\r\n      });\r\n    } else {\r\n      yield put({ type: actions.LOGIN_ERROR });\r\n    }\r\n  });\r\n}\r\n\r\nexport function* loginSuccess() {\r\n  yield takeEvery(actions.LOGIN_SUCCESS, function*(payload) {\r\n    yield localStorage.setItem('id_token', payload.token);\r\n  });\r\n}\r\n\r\nexport function* loginError() {\r\n  yield takeEvery(actions.LOGIN_ERROR, function*() {});\r\n}\r\n\r\nexport function* logout() {\r\n  yield takeEvery(actions.LOGOUT, function*() {\r\n    clearToken();\r\n    yield put(push('/'));\r\n    window.location.reload();\r\n  });\r\n}\r\nexport function* checkAuthorization() {\r\n  yield takeEvery(actions.CHECK_AUTHORIZATION, function*() {\r\n    const token = getToken().get('idToken');\r\n    if (token) {\r\n      yield put({\r\n        type: actions.LOGIN_SUCCESS,\r\n        token,\r\n        profile: 'Profile'\r\n      });\r\n    }\r\n  });\r\n}\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(checkAuthorization),\r\n    fork(loginRequest),\r\n    fork(loginSuccess),\r\n    fork(loginError),\r\n    fork(logout)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}