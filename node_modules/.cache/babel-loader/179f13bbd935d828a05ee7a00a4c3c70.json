{"ast":null,"code":"import _objectSpread from \"/var/www/html/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createHistory from 'history/createBrowserHistory';\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from '../redux/reducers';\nimport rootSaga from '../redux/sagas';\nimport logger from 'redux-logger';\nvar history = createHistory();\nvar sagaMiddleware = createSagaMiddleware();\nvar routeMiddleware = routerMiddleware(history); // const middlewares = [thunk, sagaMiddleware, routeMiddleware];\n\nvar middlewares = [thunk, sagaMiddleware, routeMiddleware, logger];\nvar store = createStore(combineReducers(_objectSpread({}, reducers, {\n  router: routerReducer\n})), compose(applyMiddleware.apply(void 0, middlewares)));\nsagaMiddleware.run(rootSaga);\nexport { store, history };","map":{"version":3,"sources":["/var/www/html/demo/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","createHistory","routerReducer","routerMiddleware","thunk","createSagaMiddleware","reducers","rootSaga","logger","history","sagaMiddleware","routeMiddleware","middlewares","store","router","run"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,oBAAhD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAGA,IAAMC,OAAO,GAAGR,aAAa,EAA7B;AACA,IAAMS,cAAc,GAAGL,oBAAoB,EAA3C;AACA,IAAMM,eAAe,GAAGR,gBAAgB,CAACM,OAAD,CAAxC,C,CACA;;AACA,IAAMG,WAAW,GAAG,CAACR,KAAD,EAAQM,cAAR,EAAwBC,eAAxB,EAAwCH,MAAxC,CAApB;AAEA,IAAMK,KAAK,GAAGhB,WAAW,CACvBC,eAAe,mBACVQ,QADU;AAEbQ,EAAAA,MAAM,EAAEZ;AAFK,GADQ,EAKvBF,OAAO,CAACD,eAAe,MAAf,SAAmBa,WAAnB,CAAD,CALgB,CAAzB;AAOAF,cAAc,CAACK,GAAf,CAAmBR,QAAnB;AACA,SAASM,KAAT,EAAgBJ,OAAhB","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from '../redux/reducers';\r\nimport rootSaga from '../redux/sagas';\r\nimport logger from 'redux-logger';\r\n\r\n\r\nconst history = createHistory();\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst routeMiddleware = routerMiddleware(history);\r\n// const middlewares = [thunk, sagaMiddleware, routeMiddleware];\r\nconst middlewares = [thunk, sagaMiddleware, routeMiddleware,logger];\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    ...reducers,\r\n    router: routerReducer\r\n  }),\r\n  compose(applyMiddleware(...middlewares))\r\n);\r\nsagaMiddleware.run(rootSaga);\r\nexport { store, history };\r\n"]},"metadata":{},"sourceType":"module"}